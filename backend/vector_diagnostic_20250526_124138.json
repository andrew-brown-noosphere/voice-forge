{
  "timestamp": "2025-05-26T12:41:37.969553",
  "configuration": {
    "vector_provider": "database",
    "has_openai_key": true,
    "has_anthropic_key": false,
    "postgres_connection": false,
    "pgvector_installed": false
  },
  "database_health": {
    "content_count": 1,
    "chunk_count": 1,
    "template_count": 0,
    "content_with_embeddings": 0,
    "chunks_with_embeddings": 0,
    "content_embedding_ratio": 0.0,
    "chunk_embedding_ratio": 0.0,
    "domains": [
      "https://pmm.voyant.io"
    ]
  },
  "performance_metrics": {
    "error": "No module named 'processor.embeddings'"
  },
  "data_quality": {
    "domain_stats": {
      "https://pmm.voyant.io": {
        "total": 1,
        "processed": 0,
        "types": [
          "landing_page"
        ],
        "processing_ratio": 0.0
      }
    },
    "chunk_stats": {
      "count": 1,
      "avg_size": 249.0,
      "min_size": 249,
      "max_size": 249
    }
  },
  "recommendations": [
    {
      "priority": "HIGH",
      "category": "Configuration",
      "issue": "pgvector extension not installed",
      "solution": "Install pgvector extension for optimal vector search performance",
      "command": "sudo -u postgres psql -c \"CREATE EXTENSION IF NOT EXISTS vector;\""
    },
    {
      "priority": "HIGH",
      "category": "Strategy",
      "issue": "Using database without pgvector - suboptimal performance",
      "solution": "Choose between pgvector (local) or Pinecone (cloud) for vector operations",
      "details": "pgvector: Better for development, lower latency. Pinecone: Better for production, more features."
    },
    {
      "priority": "MEDIUM",
      "category": "Data Quality",
      "issue": "Only 0.0% of content has embeddings",
      "solution": "Process existing content to generate embeddings",
      "command": "python scripts/process_content_for_rag.py"
    },
    {
      "priority": "MEDIUM",
      "category": "Data Quality",
      "issue": "Only 0.0% of chunks have embeddings",
      "solution": "Process content chunks to generate embeddings",
      "command": "python scripts/vector_optimization/optimize_embeddings.py"
    }
  ],
  "next_steps": [
    "Install pgvector extension in PostgreSQL",
    "Generate embeddings for existing content",
    "Generate embeddings for content chunks",
    "Choose and implement optimal vector database strategy"
  ]
}