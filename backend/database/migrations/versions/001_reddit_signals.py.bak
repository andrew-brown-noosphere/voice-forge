\"\"\"Add Reddit signal models\n\nRevision ID: 001_reddit_signals\nRevises: \nCreate Date: 2025-06-04 15:30:00.000000\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects.postgresql import JSONB, ARRAY\n\n\n# revision identifiers, used by Alembic.\nrevision = '001_reddit_signals'\ndown_revision = None\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade():\n    \"\"\"Add Reddit signal tracking tables\"\"\"\n    \n    # Create reddit_signals table\n    op.create_table(\n        'reddit_signals',\n        sa.Column('signal_id', sa.String(), nullable=False),\n        sa.Column('org_id', sa.String(), nullable=False),\n        sa.Column('platform', sa.String(), nullable=False, default='reddit'),\n        sa.Column('thread_id', sa.String(), nullable=False),\n        sa.Column('subreddit', sa.String(), nullable=False),\n        sa.Column('title', sa.String(), nullable=False),\n        sa.Column('content', sa.Text(), nullable=True),\n        sa.Column('url', sa.String(), nullable=False),\n        sa.Column('author', sa.String(), nullable=True),\n        sa.Column('score', sa.Integer(), nullable=False, default=0),\n        sa.Column('num_comments', sa.Integer(), nullable=False, default=0),\n        sa.Column('created_at', sa.DateTime(), nullable=False),\n        sa.Column('relevance_score', sa.Float(), nullable=False),\n        sa.Column('signal_type', sa.String(), nullable=False),\n        sa.Column('engagement_potential', sa.Float(), nullable=False),\n        sa.Column('top_comments', ARRAY(sa.Text()), nullable=True),\n        sa.Column('discovered_at', sa.DateTime(), nullable=False),\n        sa.Column('status', sa.String(), nullable=False, default='active'),\n        sa.Column('signal_metadata', JSONB(), nullable=True),\n        sa.PrimaryKeyConstraint('signal_id'),\n    )\n    \n    # Create indexes for reddit_signals\n    op.create_index('ix_reddit_signals_org_id', 'reddit_signals', ['org_id'])\n    op.create_index('ix_reddit_signals_org_id_subreddit', 'reddit_signals', ['org_id', 'subreddit'])\n    op.create_index('ix_reddit_signals_org_id_signal_type', 'reddit_signals', ['org_id', 'signal_type'])\n    op.create_index('ix_reddit_signals_relevance_score', 'reddit_signals', ['relevance_score'])\n    op.create_index('ix_reddit_signals_discovered_at', 'reddit_signals', ['discovered_at'])\n    op.create_index('ix_reddit_signals_thread_id', 'reddit_signals', ['thread_id'])\n    \n    # Create signal_responses table\n    op.create_table(\n        'signal_responses',\n        sa.Column('response_id', sa.String(), nullable=False),\n        sa.Column('signal_id', sa.String(), sa.ForeignKey('reddit_signals.signal_id'), nullable=False),\n        sa.Column('org_id', sa.String(), nullable=False),\n        sa.Column('generated_content', sa.Text(), nullable=False),\n        sa.Column('response_type', sa.String(), nullable=False),\n        sa.Column('platform', sa.String(), nullable=False),\n        sa.Column('tone', sa.String(), nullable=False),\n        sa.Column('confidence_score', sa.Float(), nullable=False),\n        sa.Column('response_metadata', JSONB(), nullable=True),\n        sa.Column('generated_at', sa.DateTime(), nullable=False),\n        sa.Column('status', sa.String(), nullable=False, default='generated'),\n        sa.Column('published_at', sa.DateTime(), nullable=True),\n        sa.Column('engagement_metrics', JSONB(), nullable=True),\n        sa.PrimaryKeyConstraint('response_id'),\n    )\n    \n    # Create indexes for signal_responses\n    op.create_index('ix_signal_responses_org_id', 'signal_responses', ['org_id'])\n    op.create_index('ix_signal_responses_signal_id', 'signal_responses', ['signal_id'])\n    op.create_index('ix_signal_responses_generated_at', 'signal_responses', ['generated_at'])\n    op.create_index('ix_signal_responses_confidence_score', 'signal_responses', ['confidence_score'])\n\n\ndef downgrade():\n    \"\"\"Remove Reddit signal tracking tables\"\"\"\n    op.drop_table('signal_responses')\n    op.drop_table('reddit_signals')\n"